node {
  name: "image_tensor"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_UINT8
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: -1
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "Preprocessor/mul"
  op: "Mul"
  input: "image_tensor"
  input: "Preprocessor/mul/x"
}
node {
  name: "Preprocessor/sub"
  op: "Sub"
  input: "Preprocessor/mul"
  input: "Preprocessor/sub/y"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
  op: "Conv2D"
  input: "Preprocessor/sub"
  input: "FeatureExtractor/MobilenetV1/Conv2d_0/weights/read/_4__cf__7"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_0/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/depthwise_weights/read/_29__cf__32"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/gamma/read/_26__cf__29"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/beta/read/_25__cf__28"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_mean/read/_27__cf__30"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_depthwise/BatchNorm/moving_variance/read/_28__cf__31"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_1_pointwise/weights/read/_34__cf__37"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_1_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/depthwise_weights/read/_39__cf__42"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/gamma/read/_36__cf__39"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/beta/read/_35__cf__38"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_mean/read/_37__cf__40"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_depthwise/BatchNorm/moving_variance/read/_38__cf__41"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_2_pointwise/weights/read/_44__cf__47"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_2_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/depthwise_weights/read/_49__cf__52"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/gamma/read/_46__cf__49"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/beta/read/_45__cf__48"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_mean/read/_47__cf__50"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_depthwise/BatchNorm/moving_variance/read/_48__cf__51"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_3_pointwise/weights/read/_54__cf__57"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_3_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/depthwise_weights/read/_59__cf__62"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/gamma/read/_56__cf__59"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/beta/read/_55__cf__58"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_mean/read/_57__cf__60"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_depthwise/BatchNorm/moving_variance/read/_58__cf__61"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_4_pointwise/weights/read/_64__cf__67"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_4_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/depthwise_weights/read/_69__cf__72"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/gamma/read/_66__cf__69"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/beta/read/_65__cf__68"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_mean/read/_67__cf__70"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_depthwise/BatchNorm/moving_variance/read/_68__cf__71"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_5_pointwise/weights/read/_74__cf__77"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_5_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/depthwise_weights/read/_79__cf__82"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/gamma/read/_76__cf__79"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/beta/read/_75__cf__78"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_mean/read/_77__cf__80"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_depthwise/BatchNorm/moving_variance/read/_78__cf__81"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_6_pointwise/weights/read/_84__cf__87"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_6_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/depthwise_weights/read/_89__cf__92"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/gamma/read/_86__cf__89"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/beta/read/_85__cf__88"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_mean/read/_87__cf__90"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_depthwise/BatchNorm/moving_variance/read/_88__cf__91"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_7_pointwise/weights/read/_94__cf__97"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_7_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/depthwise_weights/read/_99__cf__102"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/gamma/read/_96__cf__99"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/beta/read/_95__cf__98"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_mean/read/_97__cf__100"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_depthwise/BatchNorm/moving_variance/read/_98__cf__101"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_8_pointwise/weights/read/_104__cf__107"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_8_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/depthwise_weights/read/_109__cf__112"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/gamma/read/_106__cf__109"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/beta/read/_105__cf__108"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_mean/read/_107__cf__110"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_depthwise/BatchNorm/moving_variance/read/_108__cf__111"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_9_pointwise/weights/read/_114__cf__117"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_9_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/depthwise_weights/read/_9__cf__12"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/gamma/read/_6__cf__9"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/beta/read/_5__cf__8"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_mean/read/_7__cf__10"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_depthwise/BatchNorm/moving_variance/read/_8__cf__11"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_10_pointwise/weights/read/_14__cf__17"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_10_pointwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/depthwise_weights/read/_19__cf__22"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/gamma/read/_16__cf__19"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/beta/read/_15__cf__18"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_mean/read/_17__cf__20"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_depthwise/BatchNorm/moving_variance/read/_18__cf__21"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV1/Conv2d_11_pointwise/weights/read/_24__cf__27"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Conv2D_bn_offset"
}
node {
  name: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/BatchNorm/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/weights/read/_160__cf__163"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_0/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_0/gamma/read/_137__cf__140"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_0/beta/read/_136__cf__139"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_0/moving_mean/read/_138__cf__141"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_0/moving_variance/read/_139__cf__142"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_0/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights/read/_135__cf__138"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases/read/_134__cf__137"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights/read/_133__cf__136"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases/read/_132__cf__135"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MaxPool2d_0_2x2/MaxPool"
  op: "MaxPool"
  input: "FeatureExtractor/MobilenetV1/MobilenetV1/Conv2d_11_pointwise/Relu6"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/PredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_0_2x2/MaxPool"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/weights/read/_160__cf__163"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/PredictionTower/conv2d_0/BatchNorm/feature_1/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_1/PredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_1/gamma/read/_141__cf__144"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_1/beta/read/_140__cf__143"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_1/moving_mean/read/_142__cf__145"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_1/moving_variance/read/_143__cf__146"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_1/PredictionTower/conv2d_0/BatchNorm/feature_1/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights/read/_135__cf__138"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases/read/_134__cf__137"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_1/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights/read/_133__cf__136"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases/read/_132__cf__135"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MaxPool2d_1_2x2/MaxPool"
  op: "MaxPool"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_0_2x2/MaxPool"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/PredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_1_2x2/MaxPool"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/weights/read/_160__cf__163"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/PredictionTower/conv2d_0/BatchNorm/feature_2/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_2/PredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_2/gamma/read/_145__cf__148"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_2/beta/read/_144__cf__147"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_2/moving_mean/read/_146__cf__149"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_2/moving_variance/read/_147__cf__150"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_2/PredictionTower/conv2d_0/BatchNorm/feature_2/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights/read/_135__cf__138"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases/read/_134__cf__137"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_2/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights/read/_133__cf__136"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases/read/_132__cf__135"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MaxPool2d_2_2x2/MaxPool"
  op: "MaxPool"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_1_2x2/MaxPool"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/PredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_2_2x2/MaxPool"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/weights/read/_160__cf__163"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/PredictionTower/conv2d_0/BatchNorm/feature_3/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_3/PredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_3/gamma/read/_149__cf__152"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_3/beta/read/_148__cf__151"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_3/moving_mean/read/_150__cf__153"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_3/moving_variance/read/_151__cf__154"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_3/PredictionTower/conv2d_0/BatchNorm/feature_3/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights/read/_135__cf__138"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases/read/_134__cf__137"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_3/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights/read/_133__cf__136"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases/read/_132__cf__135"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MaxPool2d_3_2x2/MaxPool"
  op: "MaxPool"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_2_2x2/MaxPool"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/PredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_3_2x2/MaxPool"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/weights/read/_160__cf__163"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/PredictionTower/conv2d_0/BatchNorm/feature_4/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_4/PredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_4/gamma/read/_153__cf__156"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_4/beta/read/_152__cf__155"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_4/moving_mean/read/_154__cf__157"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_4/moving_variance/read/_155__cf__158"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_4/PredictionTower/conv2d_0/BatchNorm/feature_4/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights/read/_135__cf__138"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases/read/_134__cf__137"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_4/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights/read/_133__cf__136"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases/read/_132__cf__135"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV1/MaxPool2d_4_2x2/MaxPool"
  op: "MaxPool"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_3_2x2/MaxPool"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/PredictionTower/conv2d_0/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV1/MaxPool2d_4_2x2/MaxPool"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/weights/read/_160__cf__163"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/PredictionTower/conv2d_0/BatchNorm/feature_5/FusedBatchNorm"
  op: "FusedBatchNorm"
  input: "WeightSharedConvolutionalBoxPredictor_5/PredictionTower/conv2d_0/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_5/gamma/read/_157__cf__160"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_5/beta/read/_156__cf__159"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_5/moving_mean/read/_158__cf__161"
  input: "WeightSharedConvolutionalBoxPredictor/PredictionTower/conv2d_0/BatchNorm/feature_5/moving_variance/read/_159__cf__162"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/Relu6"
  op: "Relu6"
  input: "WeightSharedConvolutionalBoxPredictor_5/PredictionTower/conv2d_0/BatchNorm/feature_5/FusedBatchNorm"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_5/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/weights/read/_135__cf__138"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_5/ClassPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/biases/read/_134__cf__137"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/BoxPredictor/Conv2D"
  op: "Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor_5/Relu6"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/weights/read/_133__cf__136"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "loc_pred_transposed"
    value {
      b: true
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/BoxPredictor/BiasAdd"
  op: "BiasAdd"
  input: "WeightSharedConvolutionalBoxPredictor_5/BoxPredictor/Conv2D"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/biases/read/_132__cf__135"
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "concat/axis_flatten"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        int_val: -1
        tensor_shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/ClassPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_5/ClassPredictor/BiasAdd"
}
node {
  name: "ClassPredictor/concat"
  op: "ConcatV2"
  input: "WeightSharedConvolutionalBoxPredictor/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/ClassPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_5/ClassPredictor/BiasAdd/Flatten"
  input: "concat/axis_flatten"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd"
}
node {
  name: "WeightSharedConvolutionalBoxPredictor_5/BoxPredictor/BiasAdd/Flatten"
  op: "Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_5/BoxPredictor/BiasAdd"
}
node {
  name: "BoxPredictor/concat"
  op: "ConcatV2"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd/Flatten"
  input: "WeightSharedConvolutionalBoxPredictor_5/BoxPredictor/BiasAdd/Flatten"
  input: "concat/axis_flatten"
}
node {
  name: "PriorBox_0"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor/BoxPredictor/Conv2D"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 45.0
        float_val: 31.8198051534
        float_val: 63.6396103068
        float_val: 25.9807621135
        float_val: 77.9461837472
        float_val: 64.6915759585
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 45.0
        float_val: 63.6396103068
        float_val: 31.8198051534
        float_val: 77.9422863406
        float_val: 25.9794630429
        float_val: 64.6915759585
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_1"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_1/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 93.0
        float_val: 65.7609306503
        float_val: 131.521861301
        float_val: 53.6935750346
        float_val: 161.088779744
        float_val: 114.512008104
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 93.0
        float_val: 131.521861301
        float_val: 65.7609306503
        float_val: 161.080725104
        float_val: 53.6908902888
        float_val: 114.512008104
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_2"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_2/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 141.0
        float_val: 99.7020561473
        float_val: 199.404112295
        float_val: 81.4063879557
        float_val: 244.231375741
        float_val: 163.245214325
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 141.0
        float_val: 199.404112295
        float_val: 99.7020561473
        float_val: 244.219163867
        float_val: 81.4023175346
        float_val: 163.245214325
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_3"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_3/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 189.0
        float_val: 133.643181644
        float_val: 267.286363289
        float_val: 109.119200877
        float_val: 327.373971738
        float_val: 211.643568293
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 189.0
        float_val: 267.286363289
        float_val: 133.643181644
        float_val: 327.357602631
        float_val: 109.11374478
        float_val: 211.643568293
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_4"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_4/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 237.0
        float_val: 167.584307141
        float_val: 335.168614282
        float_val: 136.832013798
        float_val: 410.516567735
        float_val: 259.894209247
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 237.0
        float_val: 335.168614282
        float_val: 167.584307141
        float_val: 410.496041394
        float_val: 136.825172026
        float_val: 259.894209247
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox_5"
  op: "PriorBox"
  input: "WeightSharedConvolutionalBoxPredictor_5/BoxPredictor/BiasAdd"
  input: "image_tensor"
  attr {
    key: "clip"
    value {
      b: false
    }
  }
  attr {
    key: "flip"
    value {
      b: false
    }
  }
  attr {
    key: "height"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 285.0
        float_val: 201.525432638
        float_val: 403.050865276
        float_val: 164.544826719
        float_val: 493.659163732
        float_val: 292.403830344
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
  attr {
    key: "variance"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 0.1
        float_val: 0.1
        float_val: 0.2
        float_val: 0.2
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
  attr {
    key: "width"
    value {
      tensor {
        dtype: DT_FLOAT
        float_val: 285.0
        float_val: 403.050865276
        float_val: 201.525432638
        float_val: 493.634480157
        float_val: 164.536599272
        float_val: 292.403830344
        tensor_shape {
          dim {
            size: 6
          }
        }
      }
    }
  }
}
node {
  name: "PriorBox/concat"
  op: "ConcatV2"
  input: "PriorBox_0"
  input: "PriorBox_1"
  input: "PriorBox_2"
  input: "PriorBox_3"
  input: "PriorBox_4"
  input: "PriorBox_5"
  input: "concat/axis_flatten"
}
node {
  name: "ClassPredictor/concat3d/shape"
  op: "Const"
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        int_val: 0
        int_val: -1
        int_val: 91
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "ClassPredictor/concat3d"
  op: "Reshape"
  input: "ClassPredictor/concat"
  input: "ClassPredictor/concat3d/shape"
}
node {
  name: "ClassPredictor/concat/sigmoid"
  op: "Sigmoid"
  input: "ClassPredictor/concat3d"
}
node {
  name: "ClassPredictor/concat/sigmoid/Flatten"
  op: "Flatten"
  input: "ClassPredictor/concat/sigmoid"
}
node {
  name: "detection_out"
  op: "DetectionOutput"
  input: "BoxPredictor/concat"
  input: "ClassPredictor/concat/sigmoid/Flatten"
  input: "PriorBox/concat"
  attr {
    key: "background_label_id"
    value {
      i: 0
    }
  }
  attr {
    key: "code_type"
    value {
      s: "CENTER_SIZE"
    }
  }
  attr {
    key: "confidence_threshold"
    value {
      f: 0.01
    }
  }
  attr {
    key: "keep_top_k"
    value {
      i: 100
    }
  }
  attr {
    key: "nms_threshold"
    value {
      f: 0.6
    }
  }
  attr {
    key: "num_classes"
    value {
      i: 91
    }
  }
  attr {
    key: "share_location"
    value {
      b: true
    }
  }
  attr {
    key: "top_k"
    value {
      i: 100
    }
  }
}
