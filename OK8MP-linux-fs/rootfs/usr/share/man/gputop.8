.\" Automatically generated by Pandoc 1.17.2
.\"
.TH "GPUTOP" "8" "October 25, 2018" "" ""
.hy
.SH NAME
.PP
\f[B]gputop\f[] \-\- Monitor GPU clients memory, hardware counters,
occupancy state load on DMA engines, video memory and and DDR memory
bandwidth (only under Linux).
.SH SYNOPSIS
.PP
\f[B]gputop\f[] [options]
.PP
\f[B]gputop\f[] \-m [mode] \-\- Where mode can be: \f[B]mem\f[],
\f[B]counter_1\f[], \f[B]counter_2\f[], \f[B]occupancy\f[],
\f[B]dma\f[], \f[B]vidmem\f[] and \f[B]ddr\f[] (under Linux/Android).
Use this option to start \f[B]gputop\f[] directly in a mode that
you\[aq]re interested on.
For \f[B]counter_1\f[] and \f[B]counter_2\f[] a context will be needed.
See \f[I]NOTES\f[] section why this is necessary.
.PP
\f[B]gputop\f[] \-c ctx_no \-\- specify a context to attach when display
context\-aware hardware counters.
.PP
\f[B]gputop\f[] \-b \-\- display in batch mode.
For other modes than memory, this will only take an instantaneous
sample.
See \-f
.PP
\f[B]gputop\f[] \-f \-\- Use this when using \f[B]gputop\f[] from a
script.
.PP
\f[B]gputop\f[] \-x \-\- useful to display contexts when used with
``\-b\[aq]\[aq]
.PP
\f[B]gputop\f[] \-i \-\- ignore warnings about kernel mismatch
.PP
\f[B]gputop\f[] \-h \-\- display usage and help
.SS Interactive mode
.PP
Normally, when starting up, \f[B]gputop\f[], starts in interactive mode.
The following are a list of useful commands:
.IP \[bu] 2
\[aq]h\[aq] \-\- display help page
.IP \[bu] 2
\[aq]0\-6\[aq]/Left\-Right arrows \-\- switch between viewing pages
.IP \[bu] 2
\[aq]x\[aq] \-\- display application contexts
.IP \[bu] 2
\[aq]SPACE\[aq] \-\- select a context that you want to track.
Useful for reading \f[B]counter_1\f[] and \f[B]counter_2\f[] values.
.IP \[bu] 2
\[aq]r\[aq] \-\- useful for hardware\-counter pages to display different
viewing modes (switches between different modes of aggregation:
MIN/MAX/AVERAGE/TIME)
.IP \[bu] 2
\[aq]q\[aq]/ESC \-\- exits \f[B]gputop\f[].
.IP \[bu] 2
\[aq]p\[aq] \-\- stops reading counter values and displays only current
values.
Useful to get a instantaneous values of the counters.
.SH DESCRIPTION
.PP
\f[B]gputop\f[] can be used to determine the memory usage your
application is using, or to read the hardware counters exposed by the
GPU in real\-time.
Additionally, DMA engines and Occupancy states are displayed.
\f[B]gputop\f[] has multiple viewing pages: a \f[B]memory usage\f[]
page, two \f[B]hardware counter\f[] pages, a \f[B]DMA engine\f[] page
and an \f[B]Occupancy\f[] page.
When normally started, \f[B]gputop\f[] will be in interactive mode.
Type \[aq]h\[aq] to get a list of the current keybindings.
.SH REQUIREMENTS
.SS Linux
.PP
\f[B]gputop\f[] requires access to \f[B]debugfs\f[] sub\-system on Linux
in order to display memory usage, used by clients submitting commands to
the GPU.
\f[B]gputop\f[] will try to mount the \f[B]debugfs\f[]
pseudo\-filesystem if it is not already mounted.
In order to read hardware counters the profiler must be activated in the
driver.
Usually this can be set by loading the driver with \f[B]gpuProfiler=1
PowerManagement=0\f[] options, or by adding a line to
\f[B]/etc/modprobe.d/galcore.conf\f[] with those parameters.
See you distro manual on how to to do that.
.SS QNX
.PP
Just like in Linux, in order to be able to read the hardware counter
values \f[B]gpu\-gpuProfiler\f[] has to be set to 1 in
\f[C]graphics.conf\[aq]\[aq]\ file\ under\ $GRAPHICS_ROOT\ directory.\ Other\ views\ like\f[]occupancy\[aq]\[aq]
and DMA will require \f[B]gpu\-powerManagement\f[] to be set to 0
(disabled).
.SH NOTES
.SS Sampling hardware\-counters
.PP
\f[B]gputop\f[] samples the driver for hardware counter values.
Internally the driver will update the values of the counters whenever
the application submits a special type of command to the GPU.
Depending on how fast that happens \f[B]gputop\f[] can\[aq]t
foresee/adjust the values of the counters.
So tweaking the amount of sample taken or the delay time doesn\[aq]t
really help.
For dealing with situations where the application will submit either to
fast or to low commands to the GPU, several modes of viewing counters
has been added.
Cycle between them to understand or get a bird\-eye view of the counter
values.
Empirically MAX/AVERAGE displays the closes values to the truth.
.SS Context\-aware counters
.PP
\f[B]counter_1\f[] and \f[B]counter_2\f[] are context\-aware counters
(i.e.: tied to an application).
.PP
Internally the driver assigns various context IDs to the application
submitting commands to the GPU.
These contexts IDs are currently required to read those hardware counter
values.
Either use \f[B]\-x\f[] on the command line (together with \f[B]\-b\f[]
option and choosing \f[B]\-m mem\f[] viewing mode), or for interactive
mode use \[aq]x\[aq] and then \[aq]SPACE\[aq] to show and select a
context ID.
.PP
In case you are getting zero\[aq]ed out values for \f[B]counter_1\f[]
and/or \f[B]counter_2\f[] values, cycle thru the available counter IDs.
.PP
Due to the way the driver is built, for single\-GPU core applications
will have \f[B]two\f[] context\-ids.
Empirically the largest integer values holds the real context\-id.
.SS Unsupported GPUs
.PP
Do note, that on newer GPU cores, like GC7000 models, the behaviour is
different and it is not \f[B]only supported\f[] in driver version newer
than 6.2.4p1 (Build at least 150331).
.PP
For GCV600 (i.MX7ULP and i.MX8MM) the IDLE/LOAD register is not
available hence \f[B]gputop\f[] will display incorrect (inversed)
values.
.SH PAGES
.SS Client attached page
.PP
When viewing client attached page the following head columns are
displayed:
.PP
PID RES(kB) CONT(kB) VIRT(kB) Non\-PGD(kB) Total(kB) CMD
.IP \[bu] 2
PID \-\- process id
.IP \[bu] 2
RES \-\- reserved memory
.IP \[bu] 2
CONT \-\- contiguous memory
.IP \[bu] 2
VIRT \-\- virtual memory
.IP \[bu] 2
Non\-PGD \-\- Non\-paged memory
.IP \[bu] 2
Total \-\- the sum of all above
.IP \[bu] 2
CMD \-\- the name of the application (trimmed)
.PP
These memory items correspond to memory pools in the driver.
.SS Vidmem page
.PP
When viewing vidmem page the following head columns are displayed for
each process.
.PP
PID IN VE TE RT DE BM TS IM MA SC HZ IC TD FE TFB
.IP \[bu] 2
IN \-\- index
.IP \[bu] 2
VE \-\- vertex
.IP \[bu] 2
TE \-\- texture
.IP \[bu] 2
RT \-\- render target
.IP \[bu] 2
DE \-\- depth
.IP \[bu] 2
BM \-\- bitmap
.IP \[bu] 2
TS \-\- tile status
.IP \[bu] 2
IM \-\- image
.IP \[bu] 2
MA \-\- mask
.IP \[bu] 2
SC \-\- scissor
.IP \[bu] 2
HZ \-\- hz
.IP \[bu] 2
IC \-\- i_cache
.IP \[bu] 2
TD \-\- tx_desc
.IP \[bu] 2
FE \-\- fence
.IP \[bu] 2
TFB \-\- tfb header
.SH EXAMPLES
.PP
When using ``\-b\[aq]\[aq] option \f[B]gputop\f[] will start in
interactive mode and execute just once its main loop.
This is useful for various reason, either to get an instantaneous view
of a different viewing page, or scripting.
.IP \[bu] 2
Get a list of processes attached to the GPU
.RS 2
.PP
$ gputop \-m mem \-b
.RE
.IP \[bu] 2
Get a list of processes attached to the GPU, but also display the
contexts ids
.RS 2
.PP
$ gputop \-m mem \-bx
.RE
.IP \[bu] 2
Display counters (counter_1) using context_id
.RS 2
.PP
$ gputop \-m counter_1 \-b \-c
.RE
.IP \[bu] 2
Display counters (counter_2) using context_id
.RS 2
.PP
$ gputop \-m counter_2 \-b \-c
.RE
.IP \[bu] 2
Get IDLE/USAGE
.RS 2
.PP
$ gputop \-m occupancy \-b | grep IDLE
.RE
.SH SEE ALSO
.IP \[bu] 2
under QNX see \f[B]graphics.conf\f[] for disabling powerManagement and
enabling gpuProfiler.
.IP \[bu] 2
under Linux see \f[B]/sys/modules/galcore/paramenters/gpuProfiler\f[]
and \f[B]/sys/modules/galcore/parameters/PowerManagement\f[].
.IP \[bu] 2
\f[I]libgpuperfcnt(8)\f[]
.SH AUTHORS
Marius Vlad <marius-cristian.vlad@nxp.com>.
