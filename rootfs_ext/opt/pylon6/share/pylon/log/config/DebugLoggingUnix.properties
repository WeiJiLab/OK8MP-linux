# Use these settings for debugging runs
######################################################
# set up categories to specify what should be logged

# enable everything on root
log4j.rootCategory=DEBUG, File



# now disable some stuff we don't want to see
# from GenApi we only want to see Errors by default
log4j.category.GenApi=ERROR
log4j.category.FileStream=ERROR

# only infos from the viewer
log4j.category.PylonViewer=INFO



# you can uncomment any of the following lines to get detailed
# information about feature access.
# Enabling this will generate lots of output!

#log4j.category.GenApi.Device.Value=DEBUG
#log4j.category.GenApi.Device.Access=DEBUG
#log4j.category.GenApi.Device.Range=DEBUG
#log4j.category.GenApi.Device.Port=DEBUG
#log4j.category.GenApi.Device.Cache=DEBUG
#log4j.category.GenApi.Device.Misc=DEBUG



# you can also log only one single node using
# log4j.category.GenApi.Device.Value.[NodeName]=DEBUG
# log4j.category.GenApi.Device.Access.[NodeName]=DEBUG
# ...

# e.g.
#log4j.category.GenApi.Device.Value.PixelFormat=DEBUG


######################################################
# 
# appenders tell where to output logging data to

# This appender writes to a file /tmp/pylonLog.txt
log4j.appender.File=org.apache.log4j.FileAppender
log4j.appender.File.layout=org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern=[%d:%c] %p: %m%n
log4j.appender.File.fileName=/tmp/pylonLog.txt

# when using org.apache.log4j.PatternLayout appender you can use these
# format specifiers in the ConversionPattern:
#   %m = The message / log text
#   %c = Category name
#   %d = date time stamp
#   %p = message priority
#   %t = thread name
#   %u = processing time
#   %n = create new line ( this is usually at the end to make a new line break 
#   %x = Nested Diagnostic Context (NDC)
